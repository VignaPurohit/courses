// Example script showing how to visualize FeatureCollections using 
// by coloring polygons based on a property value
// This is useful in visualizing results of Zonal Statistics
// Reference https://developers.google.com/earth-engine/guides/feature_collections_visualizing

var taluks = ee.FeatureCollection("users/ujavalgandhi/gee-water-resources/kgis_taluks");
var chirps = ee.ImageCollection('UCSB-CHG/CHIRPS/PENTAD');

var year = 2019;
var startDate = ee.Date.fromYMD(year, 1, 1);
var endDate = startDate.advance(1, 'year');

var filtered = chirps
  .filter(ee.Filter.date(startDate, endDate));

// Calculate the total rainfall for the year
var total = filtered.reduce(ee.Reducer.sum());

// Compute the average total rainfall for each feature
// reduceRegions() function allows you to do zonal stats
var withRainfall = total.reduceRegions({
  collection: taluks,
  reducer: ee.Reducer.mean(),
  scale: 5566});
  
// The collection now has a new property 'mean' containing
// the mean rainfall within each polygon
print('Input for Zonal Stats', taluks.first())
print('Output of Zonal Stats', withRainfall.first());

// Create a Choropleth Map by coloring each polygon
// with the magnitude of rainfall

// We want to render the polygon features on an empty image
// Since our pixel values are large, we create an image
// to hold 16-bit integers using toInt16().
// You may use Byte() if your pixel values are witin 0-255
var empty = ee.Image().toInt16();

// Use the 'mean' property containing the zonal statistics
// to assign the pixel value to the image
var fills = empty.paint({
  featureCollection: withRainfall,
  color: 'mean',
});

// The 'fills' image now has all the polygons rendered
// We can render the outlines on that image

// Assign the pixel value 0 for the polygon edges
var fillsWithEdges = fills.paint({
  featureCollection: withRainfall,
  width: 0.5,
  color: 0
});

// The final image now has pixel value 0 for polygon
// outlines and the precipitation value as fills
var palette = ['#ffffcc','#a1dab4','#41b6c4','#2c7fb8','#253494'];
var visParams = {
  min:0,
  max: 2000,
  palette: palette
};

Map.centerObject(taluks, 8);
Map.addLayer(fillsWithEdges, visParams, 'Zonal Statistics Results');