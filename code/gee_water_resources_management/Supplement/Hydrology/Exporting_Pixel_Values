// Example script showing how to export a shapefile
// with the value of each pixel in an image of
// a gridded precipitation dataset

var chirps = ee.ImageCollection('UCSB-CHG/CHIRPS/DAILY');
var year = 2019;
var startDate = ee.Date.fromYMD(year, 1, 1);
var endDate = startDate.advance(1, 'year');

var dateFilter = ee.Filter.date(startDate, endDate);
var yearFiltered = chirps.filter(dateFilter);

print(yearFiltered)

// Calculate the total yearly precipitation
var total = yearFiltered.sum();
print(total);

// Select a region
// If you want your own region, upload a shapefile
// and use the resulting asset instead
var admin2 = ee.FeatureCollection("FAO/GAUL_SIMPLIFIED_500m/2015/level2");
var selected = admin2.filter(ee.Filter.eq('ADM2_NAME', 'Bangalore Urban'));
var geometry = selected.geometry();

// We want to extract the value at each pixel

// Add lat and lon bands
// This will give us the lat and lon of each pixel center
var imageWithLonLat = total.addBands(ee.Image.pixelLonLat());

// Use sample() to extract values at each pixel
// Use native projection and resolution of input dataset
var projection = ee.Image(chirps.first()).projection();
var scale = projection.nominalScale();
var extracted = imageWithLonLat.sample({
  region: geometry,
  scale: scale,
  projection: projection,
  geometries: true});

// Check the result
// This may time-out for large computation
// If that happens, just do the export directly
print('Extracted Value Sample', extracted.first());

// Export the results
// Choose 'CSV' as format if you just want a table
Export.table.toDrive({
  collection: extracted,
  description: 'Precipitation_Pixel_Values_Export',
  folder: 'earthengine',
  fileNamePrefix: 'pixel_values',
  fileFormat: 'SHP'});