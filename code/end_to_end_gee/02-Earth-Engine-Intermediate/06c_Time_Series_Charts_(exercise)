/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = /* color: #d63000 */ee.Geometry.Polygon(
        [[[82.60642647743225, 27.16350437805251],
          [82.60984897613525, 27.1618529901377],
          [82.61088967323303, 27.163695288375266],
          [82.60757446289062, 27.16517483230927]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var s2 = ee.ImageCollection('COPERNICUS/S2_HARMONIZED');
Map.addLayer(geometry, {color: 'red'}, 'Farm');
Map.centerObject(geometry);

var filtered = s2
  .filter(ee.Filter.date('2017-01-01', '2018-01-01'))
  .filter(ee.Filter.bounds(geometry));

// Load the Cloud Score+ collection
var csPlus = ee.ImageCollection('GOOGLE/CLOUD_SCORE_PLUS/V1/S2_HARMONIZED');
var csPlusBands = csPlus.first().bandNames();

// We need to add Cloud Score + bands to each Sentinel-2
// image in the collection
// This is done using the linkCollection() function
var filteredS2WithCs = filtered.linkCollection(csPlus, csPlusBands);

// Function to mask pixels with low CS+ QA scores.
var maskLowQA = function(image) {
  var qaBand = 'cs';
  var clearThreshold = 0.5;
  var mask = image.select(qaBand).gte(clearThreshold);
  return image.updateMask(mask);
};

// map() the function to mask all images
var filteredMasked = filteredS2WithCs
  .map(maskLowQA)
  .select('B.*');

// Function to scale pixel values to reflectance
var scaleValues = function(image) {
  var scaledImage = image.multiply(0.0001);
  // This creates a new image and we lose the properties
  // copy the system:time_start property 
  // from the originalimage
  return scaledImage
    .copyProperties(image, ['system:time_start']);
};

// Function that computes NDVI for an image and adds it as a band
var addNDVI = function(image) {
  var ndvi = image.normalizedDifference(['B8', 'B4']).rename('ndvi');
  return image.addBands(ndvi);
};

// Map the functions over the collection
var withNdvi = filteredMasked
  .map(scaleValues)
  .map(addNDVI);

// Display a time-series chart
var chart = ui.Chart.image.series({
  imageCollection: withNdvi.select('ndvi'),
  region: geometry,
  reducer: ee.Reducer.mean(),
  scale: 10
}).setOptions({
      lineWidth: 1,
      pointSize: 2,
      title: 'NDVI Time Series',
      interpolateNulls: true,
      vAxis: {title: 'NDVI'},
      hAxis: {title: '', format: 'YYYY-MMM'}
    });
  

// Delete the farm boundary and add another farm at a location of your choice
// Print the chart.
