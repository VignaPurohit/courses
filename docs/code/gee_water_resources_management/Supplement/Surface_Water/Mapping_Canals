/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #98ff00 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[72.40688960505607, 23.253796352237057],
          [72.40688960505607, 23.13450945634788],
          [72.60739009333732, 23.13450945634788],
          [72.60739009333732, 23.253796352237057]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Detecting Canals (Work-in-Progress)

var s2 = ee.ImageCollection("COPERNICUS/S2_SR_HARMONIZED");

var filtered = s2
  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 30))
  .filter(ee.Filter.date('2019-01-01', '2020-01-01'))
  .filter(ee.Filter.bounds(geometry))

// Load the Cloud Score+ collection
var csPlus = ee.ImageCollection('GOOGLE/CLOUD_SCORE_PLUS/V1/S2_HARMONIZED');
var csPlusBands = csPlus.first().bandNames();

// We need to add Cloud Score + bands to each Sentinel-2
// image in the collection
// This is done using the linkCollection() function
var filteredS2WithCs = filtered.linkCollection(csPlus, csPlusBands);

// Function to mask pixels with low CS+ QA scores.
function maskLowQA(image) {
  var qaBand = 'cs';
  var clearThreshold = 0.5;
  var mask = image.select(qaBand).gte(clearThreshold);
  return image.updateMask(mask);
}

var filteredMasked = filteredS2WithCs
  .map(maskLowQA)
  .select('B.*');

var image = filteredMasked.median(); 

// Calculate Modified Normalized Difference Water Index (MNDWI)
// 'GREEN' (B3) and 'SWIR1' (B11)
var mndwi = image.normalizedDifference(['B3', 'B11']).rename(['mndwi']); 

var rgbVis = {min: 0.0, max: 3000, bands: ['B4', 'B3', 'B2']};
var ndwiVis = {min:0, max:0.5, palette: ['white', 'blue']}

//Map.centerObject(geometry)
Map.addLayer(image.clip(geometry), rgbVis, 'Image', false);
Map.addLayer(mndwi.clip(geometry), ndwiVis, 'mndwi', false)


var canny = ee.Algorithms.CannyEdgeDetector({
  image: mndwi, threshold: 0.7, sigma:0.5
});
Map.addLayer(canny.clip(geometry), {}, 'Edges', false)

var edges = canny.gt(0);

var canals = edges//.updateMask(mask);
Map.centerObject(geometry)
Map.addLayer(canals.selfMask(), {palette: ['blue']}, 'Canals')
