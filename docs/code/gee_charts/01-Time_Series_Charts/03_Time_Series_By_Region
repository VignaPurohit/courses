/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry1 = /* color: #00ffff */ee.Geometry.Point([72.571259807491, 23.048742705530582]),
    geometry2 = /* color: #bf04c2 */ee.Geometry.Point([77.58165230513475, 12.979877606696357]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/

var now = Date.now();
var now = ee.Date(now).advance(-1, 'day');

var images = ee.ImageCollection('NOAA/GFS0P25')
  .filterDate(now, now.advance(16, 'day'))
                  
var forecastImages = images.select('temperature_2m_above_ground')
  .map(function(i) {
    return i.set({ 'system:time_start': i.get('forecast_time') })
  })

var locations = ee.FeatureCollection([
  ee.Feature(geometry1, {'name': 'Ahmedabad'}),
  ee.Feature(geometry2, {'name': 'Bangalore'})
  ])
// query temperature values at a given locations
var chart = ui.Chart.image.seriesByRegion({
  imageCollection: forecastImages,
  regions: locations,
  reducer: ee.Reducer.first(),
  scale: 27830,
  seriesProperty: 'name'
}).setOptions({
      lineWidth: 1,
      pointSize: 2,
      title: 'Temperature Forecasts',
      vAxis: {title: 'Temparature (Â°C)'},
      hAxis: {title: '', format: 'YYYY-MM-dd'},
      series: {
        0: {color: '#fc8d62'},
        1: {color: '#8da0cb'}
      },
    })
  
print(chart)