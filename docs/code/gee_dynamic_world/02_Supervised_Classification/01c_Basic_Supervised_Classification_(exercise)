/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #98ff00 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[39.4926285922204, -4.398315001988073],
          [39.4926285922204, -4.4739620180298845],
          [39.54910518523798, -4.4739620180298845],
          [39.54910518523798, -4.398315001988073]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var s2 = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED');

// Perform supervised classification for your chosen region

// Delete the 'geometry' from imports
// Draw a polygon anywhere along the coastline to
// create a new geometry
// Make sure the chosen region has mangroves and water

var filtered = s2
  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 35))
  .filter(ee.Filter.date('2020-01-01', '2021-01-01'))
  .filter(ee.Filter.bounds(geometry))
  .select('B.*');

var composite = filtered.median();

// Display the input composite.
var rgbVis = {min: 0.0, max: 3000, bands: ['B4', 'B3', 'B2']};
var swirVis = {min: 300, max: 4000, bands: ['B11', 'B8', 'B4']};
Map.centerObject(geometry);
Map.addLayer(composite.clip(geometry), rgbVis, 'S2 Composite (RGB)');
Map.addLayer(composite.clip(geometry), swirVis, 'S2 Composite (False Color)');

// Exercise
// Add training points for 3 classes
// Assign the 'landcover' property as follows

// mangroves: 1
// water: 2
// other: 3

// After adding points, uncomments lines below

// var gcps = mangroves.merge(water).merge(other);

// // Overlay the point on the image to get training data.
// var training = composite.sampleRegions({
//   collection: gcps, 
//   properties: ['landcover'], 
//   scale: 10
// });


// // Train a classifier.
// var classifier = ee.Classifier.smileRandomForest(50).train({
//   features: training,  
//   classProperty: 'landcover', 
//   inputProperties: composite.bandNames()
// });
// // // Classify the image.
// var classified = composite.classify(classifier);
// // Choose a 3-color palette
// // Assign a color for each class in the following order
// // Mangrove, Water, Other
// var palette = ['green', 'blue', 'gray'];

// Map.addLayer(classified.clip(geometry), {min: 1, max: 3, palette: palette}, '2020');
